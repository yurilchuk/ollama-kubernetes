kind: StorageClass
apiVersion: storage.k8s.io/v1
metadata:
  name: ollama-sc
  namespace: ollama
provisioner: kubernetes.io/no-provisioner
volumeBindingMode: WaitForFirstConsumer

---

kind: PersistentVolume
apiVersion: v1
metadata:
  name: ollama-data-pv
  namespace: ollama
spec:
  storageClassName: ollama-sc
  capacity:
    storage: "<STORAGE>"
  accessModes:
    - ReadWriteMany
  persistentVolumeReclaimPolicy: Retain
  nfs: 
    path: "<NFS_PATH>"
    server: "<SERVER_IP>"
---

kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: ollama-data-pvc
  namespace: ollama
spec:
  storageClassName: ollama-sc
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: "<STORAGE>"

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: ollama-deployment
  namespace: ollama
spec:
  replicas: 3
  selector:
    matchLabels:
      name: ollama
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        name: ollama
    spec:
      containers:
      - env:
        image: ollama/ollama:latest
        name: ollama
        ports:
        - containerPort: 11434
        resources:
              limits:
                cpu: "2"
                memory: "6Gi"
              requests:
                cpu: "300m"
                memory: "2Gi"  
        volumeMounts:
        - mountPath: /root/.ollama
          name: ollama-data
      restartPolicy: Always
      volumes:
      - name: ollama-data
        persistentVolumeClaim:
          claimName: ollama-data-pvc
status: {}

---

apiVersion: v1
kind: Service
metadata:
  name: ollama-service
  namespace: ollama
spec:
  type: LoadBalancer
  externalTrafficPolicy: Cluster
  ports:
  - name: http
    protocol: TCP
    port: 80
    targetPort: 11434
  selector:
    name: ollama
status: {}

---

apiVersion: networking.k8s.io/v1
kind: IngressClass
metadata:
  name: ollama-ingressclass
  namespace: ollama
spec:
  controller: nginx.org/ingress-controller 

---

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ollama-ingress
  namespace: ollama
spec:
  defaultBackend:
    service:
      name: ollama-service
      port:
        number: 80
  ingressClassName: ollama-ingressclass
  tls:
  - hosts:
    - ollama.nb41.tech
    secretName: ollama-secret
  rules:
  - host: ollama.nb41.tech
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: ollama-service
            port:
              number: 80